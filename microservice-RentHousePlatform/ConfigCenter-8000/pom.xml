<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>microservice-RentHousePlatform</artifactId>
        <groupId>com</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <groupId>com</groupId>
    <artifactId>ConfigCenter-8000</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ConfigCenter-8000</name>
    <description>ConfigCenter-8000</description>
    <properties>
        <java.version>11</java.version>
        <docker.image.prefix>192.168.226.128:5000</docker.image.prefix>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <configuration>
                    <!-- 生成的镜像仓库名称 -->
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <!-- 生成的镜像版本 -->
                    <tag>${project.version}</tag>
                    <!-- 推送到私有镜像仓库时需要开启安全认证 -->
                    <useMavenSettingsForAuth>false</useMavenSettingsForAuth>
                </configuration>
                <!-- 直接使用mvn install命令打包项目，就会自动构建镜像和推送镜像
                -->
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
