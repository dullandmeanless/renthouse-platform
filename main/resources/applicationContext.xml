<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      https://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
https://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/cache
http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--   配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/ssm?characterEncoding=UTF-8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
        <property name="maxTotal" value="30"></property>
        <property name="maxIdle" value="10"></property>
        <property name="initialSize" value="5"></property>
    </bean>
    <!--    添加事务支持-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--    开启事务注解-->
    <tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>
    <!--    配置Mybatis工厂 同时指定数据源与MyBatis整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!--使用spring自动扫描MyBatis的接口并装配 @Mapper-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!--    静态资源过滤-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>
    <context:component-scan base-package="services"></context:component-scan>

    <!--    配置拦截器-->
    <!--    <mvc:interceptors>-->
    <!--        配置一个全局拦截器，拦截所有请求-->
    <!--        <bean class="controller.UserController"></bean>-->
    <!--        <mvc:interceptor>-->
    <!--            配置拦截器作用的路径-->
    <!--            <mvc:mapping path="/**"/>-->
    <!--            配置拦截器不需要作用的路径-->
    <!--            <mvc:exclude-mapping path=""/>-->
    <!--            <bean class="Interceptor"></bean>-->
    <!--        </mvc:interceptor>-->
    <!--    配置拦截器 表示匹配指定请求路径的请求才进行拦截-->
    <!--        <mvc:interceptor>-->
    <!--&lt;!&ndash;            配置拦截器作用的路径&ndash;&gt;-->
    <!--            <mvc:mapping path="/gotoTest"/>-->
    <!--            <bean class="Interceptor"></bean>-->
    <!--        </mvc:interceptor>-->
    <!--    </mvc:interceptors>-->
</beans>